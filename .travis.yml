language: cpp

sudo: required

dist: trusty

matrix:
  include:
    - os: linux
      compiler: gcc
      env: BUILD_TYPE=Debug CODECOV=ON COMPILER=GCC LLVM_VERSION=3.6
    - os: linux
      compiler: gcc
      env: BUILD_TYPE=Release CODECOV=OFF COMPILER=GCC LLVM_VERSION=3.6
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Debug CODECOV=OFF COMPILER=CLANG LLVM_VERSION=3.6
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Release CODECOV=OFF COMPILER=CLANG LLVM_VERSION=3.6
# Disabled for macOS + llvm-3.7 (see https://github.com/personalrobotics/chimera/issues/153)
#    - os: osx
#      compiler: clang
#      env: BUILD_TYPE=Debug CODECOV=OFF COMPILER=CLANG LLVM_VERSION=3.7
#    - os: osx
#      compiler: clang
#      env: BUILD_TYPE=Release CODECOV=OFF COMPILER=CLANG LLVM_VERSION=3.7
    - os: osx
      compiler: clang
      env: BUILD_TYPE=Debug CODECOV=OFF COMPILER=CLANG LLVM_VERSION=4
    - os: osx
      compiler: clang
      env: BUILD_TYPE=Release CODECOV=OFF COMPILER=CLANG LLVM_VERSION=4

install:
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then . ci/install_linux.sh; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx"   ]; then . ci/install_macos.sh; fi

script:
  - mkdir build
  - cd build
  - cmake "-DCMAKE_BUILD_TYPE=${BUILD_TYPE}" "-DLLVM_DIR=${LLVM_DIR}" "-DCODECOV=${CODECOV}" ..
  - make -j4
  - if [ $CODECOV = ON ]; then make chimera_coverage; else make test; fi
  - if [ $CODECOV = ON ]; then bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports."; fi

after_failure: 
  - cat Testing/Temporary/LastTest.log
  - cat Testing/Temporary/LastTestsFailed.log

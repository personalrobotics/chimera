language: cpp

sudo: required

dist: xenial

env:
  global:
    - IS_PULL_REQUEST=$TRAVIS_PULL_REQUEST
    - OS_NAME=$TRAVIS_OS_NAME
    - BUILD_DIR=$TRAVIS_BUILD_DIR
    - CI=TRAVIS

matrix:
  include:
      # TODO: Fix CODECOV reporting
    - os: linux
      compiler: gcc
      env:
        - BUILD_NAME=XENIAL_GCC_DEBUG
        - BUILD_TYPE=Debug
        - COMPILER=GCC
        - LLVM_VERSION=3.9
        - PYTHON_VERSION=3.5
        - DOCKERFILE="Dockerfile.ubuntu-xenial"
      services: docker
    - os: linux
      compiler: gcc
      env:
        - BUILD_NAME=BIONIC_GCC_DEBUG
        - BUILD_TYPE=Debug
        - COMPILER=GCC
        - LLVM_VERSION=6.0
        - PYTHON_VERSION=3.6
        - DOCKERFILE="Dockerfile.ubuntu-bionic"
      services: docker
    - os: linux
      compiler: gcc
      env:
        - BUILD_NAME=DISCO_GCC_DEBUG
        - BUILD_TYPE=Debug
        - COMPILER=GCC
        - LLVM_VERSION=8.0
        - PYTHON_VERSION=3.7
        - DOCKERFILE="Dockerfile.ubuntu-disco"
      services: docker

before_install:
  - if [ -n "$DOCKERFILE" ]; then
      docker build -t "${DOCKERFILE,,}" -f ".ci/docker/$DOCKERFILE" .;
      docker run -itd -v $TRAVIS_BUILD_DIR:$TRAVIS_BUILD_DIR --env-file .ci/docker/env.list --name chimera-docker "${DOCKERFILE,,}";
    fi

install:
  - if [ -n "$DOCKERFILE" ]; then
      docker exec chimera-docker /bin/sh -c "cd $TRAVIS_BUILD_DIR && . .ci/install.sh";
    else
      . .ci/install.sh;
    fi

script:
  - if [ -n "$DOCKERFILE" ]; then
      docker exec chimera-docker /bin/sh -c "cd $TRAVIS_BUILD_DIR && . .ci/script.sh";
    else
      . .ci/script.sh;
    fi

after_failure:
  - cat Testing/Temporary/LastTest.log
  - cat Testing/Temporary/LastTestsFailed.log

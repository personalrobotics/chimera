# Azure Pipeline settings
# Ref: https://docs.microsoft.com/en-us/azure/devops/pipelines

jobs:
- job: ubuntu_xenial_gcc_release
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
    OS_NAME: linux
    COMPILER: gcc
    BUILD_TYPE: Release
    BUILD_DIR: $(Build.SourcesDirectory)
    LLVM_VERSION: 3.9
    PYTHON_VERSION: 3.5
    DOCKERFILE: Dockerfile.ubuntu-xenial
  steps:
  - template: .ci/azure-pipelines/docker.yml

- job: ubuntu_xenial_clang_release
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
    OS_NAME: linux
    COMPILER: clang
    BUILD_TYPE: Release
    BUILD_DIR: $(Build.SourcesDirectory)
    LLVM_VERSION: 3.9
    PYTHON_VERSION: 3.5
    DOCKERFILE: Dockerfile.ubuntu-xenial
  steps:
  - template: .ci/azure-pipelines/docker.yml

- job: ubuntu_bionic_gcc_release
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
    OS_NAME: linux
    COMPILER: gcc
    BUILD_TYPE: Release
    BUILD_DIR: $(Build.SourcesDirectory)
    LLVM_VERSION: 6.0
    PYTHON_VERSION: 3.6
    DOCKERFILE: Dockerfile.ubuntu-bionic
  steps:
  - template: .ci/azure-pipelines/docker.yml

- job: ubuntu_bionic_clang_release
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
    OS_NAME: linux
    COMPILER: clang
    BUILD_TYPE: Release
    BUILD_DIR: $(Build.SourcesDirectory)
    LLVM_VERSION: 6.0
    PYTHON_VERSION: 3.6
    DOCKERFILE: Dockerfile.ubuntu-bionic
  steps:
  - template: .ci/azure-pipelines/docker.yml

- job: ubuntu_disco_gcc_release
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
    OS_NAME: linux
    COMPILER: gcc
    BUILD_TYPE: Release
    BUILD_DIR: $(Build.SourcesDirectory)
    LLVM_VERSION: 8
    PYTHON_VERSION: 3.7
    DOCKERFILE: Dockerfile.ubuntu-disco
  steps:
  - template: .ci/azure-pipelines/docker.yml

- job: ubuntu_disco_clang_release
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
    OS_NAME: linux
    COMPILER: clang
    BUILD_TYPE: Release
    BUILD_DIR: $(Build.SourcesDirectory)
    LLVM_VERSION: 8
    PYTHON_VERSION: 3.7
    DOCKERFILE: Dockerfile.ubuntu-disco
  steps:
  - template: .ci/azure-pipelines/docker.yml

- job: macos_mojav_clang_llvm4_release
  pool:
    vmImage: 'macOS-10.14'
  variables:
    OS_NAME: osx
    COMPILER: clang
    BUILD_TYPE: Release
    BUILD_DIR: $(Build.SourcesDirectory)
    LLVM_VERSION: 4
  steps:
  - script: |
      . .ci/install_macos.sh
      . .ci/script.sh
    displayName: 'Install/Script'

- job: macos_mojav_clang_llvm5_release
  pool:
    vmImage: 'macOS-10.14'
  variables:
    OS_NAME: osx
    COMPILER: clang
    BUILD_TYPE: Release
    BUILD_DIR: $(Build.SourcesDirectory)
    LLVM_VERSION: 5
  steps:
  - script: |
      source .ci/install_macos.sh
      . .ci/script.sh
    displayName: 'Install/Script'

- job: macos_mojav_clang_llvm6_release
  pool:
    vmImage: 'macOS-10.14'
  variables:
    OS_NAME: osx
    COMPILER: clang
    BUILD_TYPE: Release
    BUILD_DIR: $(Build.SourcesDirectory)
    LLVM_VERSION: 6
  steps:
  - script: |
      . .ci/install_macos.sh
      . .ci/script.sh
    displayName: 'Install/Script'

- job: macos_mojav_clang_llvm7_release
  pool:
    vmImage: 'macOS-10.14'
  variables:
    OS_NAME: osx
    COMPILER: clang
    BUILD_TYPE: Release
    BUILD_DIR: $(Build.SourcesDirectory)
    LLVM_VERSION: 7
  steps:
  - script: |
      . .ci/install_macos.sh
      . .ci/script.sh
    displayName: 'Install/Script'

- job: macos_mojav_clang_llvm8_release
  pool:
    vmImage: 'macOS-10.14'
  variables:
    OS_NAME: osx
    COMPILER: clang
    BUILD_TYPE: Release
    BUILD_DIR: $(Build.SourcesDirectory)
    LLVM_VERSION: 8
  steps:
  - script: |
      . .ci/install_macos.sh
      . .ci/script.sh
    displayName: 'Install/Script'
